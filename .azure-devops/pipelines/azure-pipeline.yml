trigger:
  branches:
    include:
      - 'feature/*'
      - 'master'
  tags:
    include:
      - '*'

pool:
  vmImage: "ubuntu-latest"


variables:
  docker_registry_service_connection: "d46a8808-46ca-4d98-8cf4-ec41c18db25b"
  azure_subsription_connection: "4a0dc9a4-3e6b-4da2-8c65-8a1cefc85065"
  docker_repository: oceandata.azurecr.io/app-template
  isMaster: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))]
  isTag: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]

jobs:
#   - job: Build
#     variables:
#       image_tag: dev
#     steps:
#       - checkout: self
#         fetchDepth: 3
#         clean: true
#       - script: echo "##vso[task.setvariable variable=environment]prod"
#         displayName: Set environment to PROD
#         condition: eq(variables.isTag, true)
#       - script: VERSION_TAG=`git describe --tags` && echo "##vso[task.setvariable variable=image_tag]$VERSION_TAG"
#         displayName: Set image image tag to latest git tag
#         condition: eq(variables.isTag, true)
#       - script: echo "##vso[task.setvariable variable=image_tag]latest"
#         displayName: Set image tag to latest
#         condition: eq(variables.isMaster, true)
#       - script: VERSION_TAG=`git rev-parse --short HEAD` && echo "##vso[task.setvariable variable=image_tag]$VERSION_TAG"
#         displayName: Set the git tag to git hash
#         condition: and(eq(variables.isTag, false), eq(variables.isMaster, false))
#
#       - task: Docker@2
#         displayName: Build image to container registry
#         inputs:
#           command: buildAndPush
#           repository: $(docker_repository)
#           dockerfile: $(Build.SourcesDirectory)/Dockerfile
#           containerRegistry: $(docker_registry_service_connection)
#           tags: |
#             $(image_tag)
#             $(Build.BuildId)
  - job: Deploy
#    dependsOn: Build
    variables:
      environment: dev
      vault_name: kv-dev-main
    steps:
      - checkout: self
        fetchDepth: 3
        clean: true
        path: src
      - checkout: git://ODP/app-deployer
        clean: true
        path: app-deployer
      - script: echo "##vso[task.setvariable variable=environment]prod"
        displayName: Set environment tag to PROD
        condition: or(eq(variables.isMaster, true), eq(variables.isTag, true))
      - script: echo "##vso[task.setvariable variable=vault_name]kv-${ENVIRONMENT}-main"
        displayName: Set Azure Vault name
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: $(azure_subsription_connection)
          KeyVaultName: $(vault_name)
          SecretsFilter: "eas-*"
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
      - script: python -m pip install -U pip setuptools wheel
        displayName: Install and update PIP
      - script: python -m pip install poetry
        displayName: Install and Poetry
      - script: cd ../app-deployer && poetry install
        displayName: Install dependencies
      - script: cd $(Build.SourcesDirectory) && ls -lA ..
        displayName: List stuff

